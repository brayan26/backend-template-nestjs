services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 40s
      timeout: 20s
      retries: 3
    networks:
      - nestjs_network
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [ zookeeper ]
    healthcheck:
      test: [ "CMD", "bash", "-c", "kafka-broker-api-versions --bootstrap-server=kafka:9092" ]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
    networks:
      - nestjs_network
  command_after_start_kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [ kafka ]
    volumes:
      - ./init.sh:/init.sh
    command: [ "sh", "-c", "ls -a && chmod +x /init.sh && /init.sh" ]
    networks:
      - nestjs_network
  ms-nestjs-app:
    build: ./
    container_name: ms-nestjs-app
    ports:
      - "3000:3000"
    depends_on:
      - zookeeper
      - kafka
      - command_after_start_kafka
    env_file:
      - .env
    networks:
      - nestjs_network
networks:
  nestjs_network:
    driver: bridge